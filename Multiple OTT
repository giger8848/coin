//@version=5
indicator('Multiple OTT','MOTT', overlay=true, precision=2)
src = close
mav = input.string(title='밴드종류', defval='EMA OTT', options=['SMA OTT', 'EMA OTT', 'WMA OTT', 'TMA OTT', 'VAR OTT', 'WWMA OTT', 'ZLEMA OTT'])
length = input.int(2, 'OTT 길이', minval=1)
percent = input.float(0.6, 'OTT 계수', step=0.1, minval=0)
lengthA = input.int(20,'밴드A길이', minval=1)
lengthB = input.int(40,'밴드B길이', minval=1)
showsupport = input(title="Show MOVING AVERAGE?", defval=false)

Var_Func(src, length) =>
    valpha = 2 / (length + 1)
    vud1 = src > src[1] ? src - src[1] : 0
    vdd1 = src < src[1] ? src[1] - src : 0
    vUD = math.sum(vud1, 9)
    vDD = math.sum(vdd1, 9)
    vCMO = nz((vUD - vDD) / (vUD + vDD))
    VAR = 0.0
    VAR := nz(valpha * math.abs(vCMO) * src) + (1 - valpha * math.abs(vCMO)) * nz(VAR[1])
    VAR
VAR = Var_Func(src, length)
Wwma_Func(src, length) =>
    wwalpha = 1 / length
    WWMA = 0.0
    WWMA := wwalpha * src + (1 - wwalpha) * nz(WWMA[1])
    WWMA
WWMA = Wwma_Func(src, length)
Zlema_Func(src, length) =>
    zxLag = length / 2 == math.round(length / 2) ? length / 2 : (length - 1) / 2
    zxEMAData = src + src - src[zxLag]
    ZLEMA = ta.ema(zxEMAData, length)
    ZLEMA
ZLEMA = Zlema_Func(src, length)
Tsf_Func(src, length) =>
    lrc = ta.linreg(src, length, 0)
    lrc1 = ta.linreg(src, length, 1)
    lrs = lrc - lrc1
    TSF = ta.linreg(src, length, 0) + lrs
    TSF
TSF = Tsf_Func(src, length)

ma(source, length, _type) =>
    switch _type
        "SMA OTT" => ta.sma(source, length)
        "EMA OTT" => ta.ema(source, length)
        "WMA OTT" => ta.wma(source, length)
        "TMA OTT" => ta.sma(ta.sma(source, math.ceil(length / 2)), math.floor(length / 2) + 1)
        "VAR OTT" => Var_Func(source, length)
        "WWMA OTT" => ta.vwma(source, length)
        "ZLEMA OTT" => Zlema_Func(source, length)
        "TSF OTT" => Tsf_Func(source, length)
        "RMA OTT" => ta.rma(source, length)

MAvg =  ma(src, length, mav)

AHigh = ta.highest(high,lengthA)
ALow = ta.lowest(low,lengthA)
BHigh = ta.highest(high,lengthB)
BLow = ta.lowest(low,lengthB)

ottA(source,length,percent) =>
    MA = ma(source, length, mav)
    fark = MA * percent * 0.01, longStop = MA - fark, shortStop =  MA + fark
    longStop := longStop > nz(longStop[1]) or MA < nz(longStop[1]) ? longStop : nz(longStop[1])
    shortStop := shortStop < nz(shortStop[1]) or  MA > nz(shortStop[1]) ? shortStop : nz(shortStop[1])
    AHigh = 0.0, AHigh :=  MA > nz (AHigh[1]) ? longStop :  MA < nz(AHigh[1]) ? shortStop : nz(AHigh[1])
    ot1 = 1 +  percent * 0.01 / 2
    ot2 = 1 -  percent * 0.01 / 2
    ALow =  MA> AHigh ? AHigh * ot1 : AHigh * ot2
    OT = nz(ALow[2])

ottB(source,length,percent) =>
    MA = ma(source, length, mav)
    fark = MA * percent * 0.01, longStop = MA - fark, shortStop =  MA + fark
    longStop := longStop > nz(longStop[1]) or MA < nz(longStop[1]) ? longStop : nz(longStop[1])
    shortStop := shortStop < nz(shortStop[1]) or  MA > nz(shortStop[1]) ? shortStop : nz(shortStop[1])
    BHigh = 0.0, BHigh :=  MA > nz (BHigh[1]) ? longStop :  MA < nz(BHigh[1]) ? shortStop : nz(BHigh[1])
    ot1 = 1 +  percent * 0.01 / 2
    ot2 = 1 -  percent * 0.01 / 2
    BLow =  MA> BHigh ? BHigh * ot1 : BHigh * ot2
    OT = nz(BLow[2])


O1 = ottA(AHigh,length,percent)
O2 = (ottA(AHigh,length,percent)+ottA(ALow,length,percent))/2
O3 = ottA(ALow,length,percent)
O4 = ottB(BHigh,length,percent)
O5 = (ottB(BHigh,length,percent)+ottB(BLow,length,percent))/2
O6 = ottB(BLow,length,percent)

plot(O1, "OTT1", color=color.rgb(33, 170, 243), linewidth=2)
plot(O2, "OTT2", color=color.rgb(33, 170, 243), linewidth=2)
plot(O3, "OTT3", color=color.rgb(56, 224, 196), linewidth=2)
plot(O4, "OTT4", color=color.rgb(33, 170, 243), linewidth=1)
plot(O5, "OTT5", color=color.rgb(33, 170, 243), linewidth=1)
plot(O6, "OTT6", color=color.rgb(56, 224, 196), linewidth=1)
plot(showsupport ? MAvg : na, color=color.new(#051be1, 0), linewidth=2, title="VIDYA")
